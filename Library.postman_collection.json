{
	"info": {
		"_postman_id": "2dc37443-50f7-4c75-a46f-55ec282c0d0e",
		"name": "Library",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36825596"
	},
	"item": [
		{
			"name": "Add Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.ID)\r",
							"\r",
							"//Almacenar el ID en una variable de ambiente\r",
							"pm.environment.set(\"id_book\",jsonData.ID)\r",
							"\r",
							"//Testeando...\r",
							"pm.test(\"Validar estatus http 200\", function(){\r",
							"    pm.response.to.have.status(200),\r",
							"    pm.expect(jsonData).to.property(\"Msg\")\r",
							"    pm.expect(jsonData.Msg).to.equal(\"successfully added\")     \r",
							"});\r",
							"\r",
							"pm.test(\"Validar headers and response time\", function(){\r",
							"    pm.response.to.have.header(\"Content-Type\")\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"application/json;charset=UTF-8\")\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1200)\r",
							"    pm.expect(pm.response.text()).to.include(\"successfully added\")\r",
							"});\r",
							"\r",
							"pm.test(\"Validar la logica ID\",function(){\r",
							"    var isbb = pm.collectionVariables.get(\"isb\")\r",
							"    //Obtener el aisle de body\r",
							"    var req = JSON.parse(pm.request.body.raw)\r",
							"    var aisle = req.aisle\r",
							"    var id_esperado = isbb + aisle\r",
							"    pm.expect(id_esperado).to.equal(pm.environment.get(\"id_book\"))\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"const code = pm.globals.get(\"companyCode\")\r",
							"const val = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"\r",
							"pm.collectionVariables.set(\"isb\",code+val)\r",
							"\r",
							"pm.collectionVariables.set(\"name_book\",pm.iterationData.get(\"nameBook\"))\r",
							"pm.collectionVariables.set(\"name_author\",pm.iterationData.get(\"Author\"))\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n\"name\":\"{{name_book}}\",\r\n\"isbn\":\"{{isb}}\",\r\n\"aisle\":\"227\",\r\n\"author\":\"{{name_author}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/Library/Addbook.php",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"Library",
						"Addbook.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var jsonSchema = {\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"book_name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"isbn\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"aisle\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"author\": {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"book_name\",\r",
							"        \"isbn\",\r",
							"        \"aisle\",\r",
							"        \"author\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test(\"Validando estatus 200\", function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar json del response\", function(){\r",
							"    pm.expect(jsonData[0].author).to.equal(pm.collectionVariables.get(\"name_author\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Validar json to jsonShema correct\", function(){\r",
							"    pm.response.to.have.jsonSchema(jsonSchema)\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/Library/GetBook.php?ID={{id_book}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"Library",
						"GetBook.php"
					],
					"query": [
						{
							"key": "ID",
							"value": "{{id_book}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete_Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Validar mensaje correcto de eliminaci√≥n\", function(){\r",
							"    pm.expect(jsonData.msg).to.equal(\"book is successfully deleted\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"ID\" : \"{{id_book}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/Library/DeleteBook.php",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"Library",
						"DeleteBook.php"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "isb",
			"value": ""
		},
		{
			"key": "name_book",
			"value": ""
		},
		{
			"key": "name_author",
			"value": ""
		},
		{
			"key": "flag",
			"value": ""
		}
	]
}