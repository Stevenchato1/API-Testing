{
	"info": {
		"_postman_id": "f4c50daa-a134-460b-b28b-8d99cd7bd406",
		"name": "Library API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36825596"
	},
	"item": [
		{
			"name": "Addbook",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Assertions response\r",
							"\r",
							"const jsonData = pm.response.json()\r",
							"const req =  JSON.parse(pm.request.body.raw)\r",
							"const aisle_val = req.aisle\r",
							"const isbn_val = pm.collectionVariables.get(\"isbn\");\r",
							"pm.collectionVariables.set(\"flag\",false);\r",
							"console.log(jsonData)\r",
							"console.log(jsonData.ID)\r",
							"\r",
							"\r",
							"pm.test(\"Validate status is 200\", function(){\r",
							"    try{\r",
							"        pm.response.to.have.status(200);  \r",
							"        pm.expect(jsonData).have.property(\"Msg\")\r",
							"        pm.expect(jsonData.Msg).to.equals(\"successfully added\")\r",
							"        pm.environment.set(\"IDbook\", jsonData.ID)\r",
							"\r",
							"    }catch(error){\r",
							"        if(jsonData.Msg.includes(\"Exists\")){\r",
							"            CleanSetup();\r",
							"        }\r",
							"    }\r",
							"    \r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate headers, responseTime and more\", function(){\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"application/json;charset=UTF-8\");\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validation ID logic\", function(){  \r",
							"     \r",
							"    pm.expect(createBookId()).to.eql(jsonData.ID)\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"function CleanSetup(){\r",
							"    const bookid = createBookId();\r",
							"    pm.environment.set(\"IDbook\",bookid);\r",
							"    pm.collectionVariables.set(\"flag\",true);\r",
							"    pm.execution.setNextRequest(\"Delete Book\");\r",
							"}\r",
							"\r",
							"function createBookId(){\r",
							"    const expect_Val = req.isbn + req.aisle\r",
							"    return expect_Val;\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//Crear el ISBN\r",
							"\r",
							"let CodigoCompañia = pm.globals.get(\"companyCode\")\r",
							"console.log(CodigoCompañia)\r",
							"\r",
							"let Continuidad = pm.variables.replaceIn('{{$randomInt}}')\r",
							"console.log(Continuidad)\r",
							"\r",
							"let Author = pm.variables.replaceIn('{{$randomFullName}}')\r",
							"console.log(Author)\r",
							"\r",
							"pm.collectionVariables.set(\"isbn\",CodigoCompañia+Continuidad)\r",
							"//pm.collectionVariables.set(\"author\", Author)\r",
							"pm.collectionVariables.set(\"author\", pm.iterationData.get(\"Author\"))\r",
							"pm.collectionVariables.set(\"book\", pm.iterationData.get(\"nameBook\"))\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{book}}\",\r\n    \"isbn\": \"{{isbn}}\",\r\n    \"aisle\": \"227121\",\r\n    \"author\": \"{{author}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/Library/Addbook.php",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"Library",
						"Addbook.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Book for ID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"console.log(jsonData[0].author)\r",
							"\r",
							"pm.test(\"Validate author in response\", function(){\r",
							"    pm.expect(jsonData[0].author).to.eql(pm.collectionVariables.get(\"author\"))\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n\r\n\"name\":\"Learn Appium Automation with Java\",\r\n\"isbn\":\"bcd\",\r\n\"aisle\":\"227\",\r\n\"author\":\"John foe\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/Library/GetBook.php?ID={{IDbook}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"Library",
						"GetBook.php"
					],
					"query": [
						{
							"key": "ID",
							"value": "{{IDbook}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"msg\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"msg\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Validate response and schema\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.jsonSchema(schema)\r",
							"    pm.expect(pm.response.text()).to.include(\"book is successfully deleted\")\r",
							"    if(pm.collectionVariables.get(\"flag\")){\r",
							"        pm.execution.setNextRequest(\"Addbook\");\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"ID\" : \"{{IDbook}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/Library/DeleteBook.php",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"Library",
						"DeleteBook.php"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "isbn",
			"value": ""
		},
		{
			"key": "author",
			"value": ""
		},
		{
			"key": "book",
			"value": ""
		},
		{
			"key": "flag",
			"value": "false",
			"type": "string"
		}
	]
}